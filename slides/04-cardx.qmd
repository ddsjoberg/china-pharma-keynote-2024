# {cardx} 

## {cardx} R Package <a href="https://insightsengineering.github.io/cardx/"><img src="https://insightsengineering.github.io/cardx/latest-tag/logo.png" align="right" height="138" alt="cardx website" /></a>

- While {cards} performs basic (and very common) summaries, {cardx} exports `ard_*()` functions for more complex analytic results.

- The list is growing, but we have functions for t-tests, Wilcoxon tests, standardized mean differences, ANOVA (including repeated measures), survey methods, confidence intervals for proportions and centrality estimates, and more.

- Elegant solution for nearly every regression model type in the R ecosystem, where we can identify regression types (linear, logistic, Cox, etc.), identify the underlying variable names for categorical variables (different from the model terms), identify reference groups for categorical variables, and much much more.

::: {.notes}

Yes, this is also a draft hex sticker!

:::

## {cardx}

Supported regression model types include:

::: {.small}

`r broom.helpers::supported_models$model`.

:::

## {cardx} in Practice

In the example below, we're adding a confidence interval around the rate of subjects who completed the study.

We're using the default computation method (Wald) and confidence level (95%).

```{r}
#| message: true
cards::ADSL |> 
  dplyr::mutate(COMPLETED = DCDECOD == "COMPLETED") |> 
  cardx::ard_proportion_ci(variables = COMPLETED) # using default CI method 'Wald'
```

## {cardx} in Practice: _Gone Wrong_ ðŸ˜±

What happens when statistics are un-calculable? 

(It's one of my favorite features of {cards} and {cardx})

```{r}
#| message: true
ard_gone_wrong <- 
  cards::ADSL |> 
  cards::ard_continuous(
    variable = AGEGR1,
    statistic = ~list(kurtosis = \(x) e1071::kurtosis(x, na.rm = TRUE))
  )
ard_gone_wrong
```

::: {.fragment}

```r
print_ard_conditions(ard_gone_wrong)
```

![](images/ard-error-msg.png)

:::

::: {.notes}

- Even when there are errors or warnings, we still get the ARD with the expected structure returned.

  - THIS IS BIG! There are MANY circumstances, when you are designing TLGs early in a study when you do not have all the data required to calculate every statistic.
  
  - This allows you to design everything up-front.
  
- We can also report these warnings and errors back to users. <!CLICK!>

:::
